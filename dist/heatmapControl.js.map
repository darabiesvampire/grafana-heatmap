{"version":3,"sources":["../src/heatmapControl.js"],"names":["ensureArrayContains","array","value","indexOf","push","getColorForValue","data","console","info","debug","i","thresholds","length","colorMap","_","first","TimeSeries","kbn","MetricsPanelCtrl","heatmapEditor","displayEditor","pluginName","panelOptions","treeMap","modes","nodeSizeProperties","aggregationFunctions","panelDefaults","seriesOverrides","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","nullPointMode","format","valueName","valueOptions","valueMaps","op","text","mode","groups","key","aggregationFunction","enableTimeBlocks","enableGrouping","depth","ids","nodeSizeProperty","HeatmapCtrl","$scope","$injector","$sce","defaults","panel","options","chartId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","initializePanel","d3plusPath","_this","meta","SystemJS","config","import","then","d3plusLoaded","log","emit","err","getPanelContainer","html","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","preparedData","d3plusDataProcessor","render","dataArray","resultArray","dataIndex","newDataItem","Object","assign","groupIndex","regex","stringToJsRegex","matches","alias","match","timeBlockArray","dataSeries","dataPointIndex","flotpairs","dataSeriesCopy","datapoints","timestamp","seriesData","target","replace","getFlotPairs","stats","override","group","without","thresholdCount","colorCount","refresh","colorIndex","color","splice","Math","apply","absoluteDistance","valueDistanceFromMin","xPercent","getColorByXPercentage","canvas","seriesItemAlias","seriesItem","colorData","overrides","split","strVale","Number","trim","reverse","pos","idString","isNumber","decimals","scaledDecimals","delta","dec","floor","LN10","magn","pow","norm","size","result","scope","elem","attrs","ctrl","chartElement","find","append","chartContainer","css","height","updateSize","updateChart","d3","select","selectAll","remove","idKeys","Array","from","aggs","d3plus","viz","dev","container","type","uniq","width","draw","onRender","renderingCompleted","templateUrl"],"mappings":"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","file":"heatmapControl.js","sourcesContent":["import './libs/d3/d3'; \r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport {heatmapEditor, displayEditor, pluginName} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_heatmap_ctrl';\r\nimport './css/heatmap.css!';\r\n\r\nconst panelOptions = {\r\n\ttreeMap:{\r\n    \tmodes: ['squarify', 'slice', 'dice', 'slice-dice'],\r\n    \tnodeSizeProperties: ['value', 'count'],\r\n    \taggregationFunctions: ['sum', 'min', 'max', 'extent', 'mean', 'median', 'quantile', 'variance', 'deviation']\r\n\t}\r\n};\r\n\r\nconst panelDefaults = {\r\n\t// other style overrides\r\n    seriesOverrides: [],\r\n\tthresholds: '0,10',\r\n\tcolors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n\tlegend: {\r\n\t\tshow: true,\r\n\t\tmin: true,\r\n\t\tmax: true,\r\n\t\tavg: true,\r\n\t\tcurrent: true,\r\n\t\ttotal: true,\r\n\t\tgradient: {\r\n\t\t\tenabled: true,\r\n\t\t\tshow: true\r\n\t\t}\r\n\t},\r\n\tmaxDataPoints: 100,\r\n\tmappingType: 1,\r\n\tnullPointMode: 'connected',\r\n\tformat: 'none',\r\n\tvalueName: 'avg',\r\n\tvalueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n    valueMaps: [\r\n      { value: 'null', op: '=', text: 'N/A' }\r\n    ],\r\n    treeMap: {\r\n    \tmode: 'squarify',\r\n    \tgroups: [{key:'server', value: '/^.*\\./g'}],\r\n    \taggregationFunction: 'mean',\r\n    \tenableTimeBlocks: false,\r\n    \tenableGrouping: true,\r\n    \tdebug: false,\r\n    \tdepth: 0,\r\n    \tids: ['alias'],\r\n    \tnodeSizeProperty: \"value\"\r\n    }\r\n};\r\n\r\nclass HeatmapCtrl extends MetricsPanelCtrl {\r\n\tconstructor($scope, $injector, $sce) {\r\n\t\tsuper($scope, $injector);\r\n\t\t_.defaults(this.panel, panelDefaults);\r\n\t\t\r\n\t\tthis.options = panelOptions;\r\n\t\tthis.panel.chartId = 'chart_' + this.panel.id;\r\n\t\tthis.containerDivId = 'container_'+this.panel.chartId;\r\n\t\tthis.$sce = $sce;\r\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\r\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n\t\tthis.initializePanel();\r\n\t}\r\n\t\r\n\tinitializePanel(){\r\n\t\tvar d3plusPath = 'plugins/'+pluginName+'/libs/d3plus/d3plus.full.js';\r\n\t\tvar _this = this;\r\n\t\tvar meta = {};\r\n\t\tmeta[d3plusPath] = {\r\n\t\t\t      format: 'global'\r\n\t    };\r\n\t\t\r\n\t\tSystemJS.config({\r\n\t\t\t  meta: meta\r\n\t\t\t});\r\n\r\n\t\tSystemJS.import(d3plusPath).then(function d3plusLoaded(){\r\n\t\t\tconsole.log('d3plus is loaded');\r\n\t\t\t_this.events.emit('render');\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleError(err){\r\n\t\tthis.getPanelContainer().html('<p>Error:</p><pre>' + err + '</pre>');\r\n\t}\r\n\t\r\n\tonInitEditMode() {\r\n\t\tthis.addEditorTab('Heatmap', heatmapEditor, 2);\r\n\t\tthis.addEditorTab('Display', displayEditor, 3);\r\n\t}\r\n\t\r\n\tgetPanelContainer(){\r\n\t\treturn $(document.getElementById(this.containerDivId));\r\n\t}\r\n\t\r\n\tonDataReceived(dataList){\r\n\t\tconsole.info('received data');\r\n\t\tconsole.debug(dataList);\r\n\t\tthis.series = dataList.map(this.seriesHandler.bind(this));\r\n\t\tconsole.info('mapped dataList to series');\r\n\r\n\t\tvar preparedData = this.d3plusDataProcessor(this.series);\r\n\t\tthis.render(preparedData);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare data for d3plus\r\n\t */\r\n\td3plusDataProcessor(dataArray){\r\n\t\tvar resultArray = [];\r\n\t\t\r\n\t\tif(this.panel.treeMap.groups.length < 1){\r\n\t\t\t// just add the original items since there are no groups\r\n\t\t\tfor (var dataIndex=0; dataIndex < dataArray.length; dataIndex++){\r\n\t\t\t\tvar newDataItem = Object.assign({}, dataArray[dataIndex]);\r\n\t\t\t\tresultArray.push(newDataItem);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Process Groups\r\n\t\t\tfor(var groupIndex=0; groupIndex<this.panel.treeMap.groups.length; groupIndex++){\r\n\t\t\t\tvar key = this.panel.treeMap.groups[groupIndex].key;\r\n\t\t\t\tvar value = this.panel.treeMap.groups[groupIndex].value;\r\n\t\t\t\tvar regex = kbn.stringToJsRegex(value);\r\n\t\t\t\t\r\n\t\t\t\tfor (var dataIndex=0; dataIndex < dataArray.length; dataIndex++){\r\n\t\t\t\t\tvar newDataItem = Object.assign({}, dataArray[dataIndex]);\r\n\t\t\t\t\tvar matches = newDataItem.alias.match(regex);\r\n\t\t\t\t\tif (matches && matches.length > 0){\r\n\t\t\t\t\t\tconsole.debug('group:'+key +'\\nalias:'+ newDataItem.alias + '\\nregex:' + regex +'\\nmatches:' + matches);\r\n\t\t\t\t\t\tnewDataItem[key] = matches[0];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewDataItem[key] = 'NA';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresultArray.push(newDataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// add items for time blocks\r\n\t\tif(this.panel.treeMap.enableTimeBlocks){\r\n\t\t\tconsole.info('creating timeblock records')\r\n\t\t\tvar timeBlockArray = [];\r\n\t\t\tfor (var dataIndex=0; dataIndex < resultArray.length; dataIndex++){\r\n\t\t\t\tconsole.debug('dataIndex:'+dataIndex+', alias:'+resultArray[dataIndex].alias);\r\n\t\t\t\tvar dataSeries = resultArray[dataIndex];\r\n\t\t\t\tfor(var dataPointIndex=0; dataPointIndex < dataSeries.flotpairs.length; dataPointIndex++){\r\n\t\t\t\t\tvar dataSeriesCopy = Object.assign({}, dataSeries);\r\n\t\t\t\t\tdelete dataSeriesCopy.datapoints;\r\n\t\t\t\t\tdelete dataSeriesCopy.flotpairs;\r\n\t\t\t\t\tdataSeriesCopy.timestamp = dataSeries.flotpairs[dataPointIndex][0];\r\n\t\t\t\t\tdataSeriesCopy.value = dataSeries.flotpairs[dataPointIndex][1];\r\n\t\t\t\t\ttimeBlockArray.push(dataSeriesCopy);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresultArray = timeBlockArray;\r\n\t\t} else {\r\n\t\t\t\r\n\t\t}\r\n\t\treturn resultArray;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Series Handler\r\n\t */\r\n\tseriesHandler(seriesData) {\r\n\t\tvar series = new TimeSeries({\r\n\t\t\tdatapoints: seriesData.datapoints,\r\n\t\t\talias: seriesData.target.replace(/\"|,|;|=|:|{|}/g, '_')\r\n\t\t});\r\n\t    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\t    series.value = series.stats[this.panel.valueName];\r\n\t    return series;\r\n\t} // End seriesHandler()\r\n\t\r\n\taddSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides.push(override || {});\r\n\t}\r\n\t\r\n\taddTreeMapGroup(group) {\r\n\t\tthis.panel.treeMap.groups.push(group || {});\r\n\t}\r\n\r\n\tremoveSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n\t    this.render();\r\n\t}\r\n\t\r\n\tremoveTreeMapGroup(group) {\r\n\t\tthis.panel.treeMap.groups = _.without(this.panel.treeMap.groups, group);\r\n\t    this.render();\r\n\t}\r\n\t\r\n\tupdateThresholds(){\r\n\t\tvar thresholdCount = this.panel.thresholds.length;\r\n\t\tvar colorCount = this.panel.colors.length;\r\n\t\tthis.refresh();\r\n\t}\r\n\t\r\n\tchangeColor(colorIndex, color){\r\n\t\tthis.panel.colors[colorIndex] = color;\r\n\t}\r\n\t\r\n\tremoveColor(colorIndex){\r\n\t\tthis.panel.colors.splice(colorIndex,1);\r\n\t}\r\n\t\r\n\taddColor(){\r\n\t\tthis.panel.colors.push('rgba(255, 255, 255, 1)');\r\n\t}\r\n\t\r\n\tgetGradientForValue(data, value){\r\n\t\tconsole.info('Getting gradient for value');\r\n\t\tconsole.debug(data);\r\n\t\tconsole.debug(value);\r\n\t\tvar min = Math.min.apply(Math, data.thresholds);\r\n\t\tvar max = Math.max.apply(Math, data.thresholds);\r\n\t\tvar absoluteDistance = max - min;\r\n\t\tvar valueDistanceFromMin = value - min;\r\n\t\tvar xPercent = valueDistanceFromMin/absoluteDistance;\r\n\t\t// Get the smaller number to clamp at 0.99 max\r\n\t\txPercent = Math.min(0.99, xPercent);\r\n\t\t// Get the larger number to clamp at 0.01 min\r\n\t\txPercent = Math.max(0.01, xPercent);\r\n\t\t\r\n\t\treturn getColorByXPercentage(this.canvas, xPercent);\r\n\t}\r\n\t\r\n\tapplyOverrides(seriesItemAlias){\r\n\t\tvar seriesItem = {}, colorData = {}, overrides = {};\r\n\t\tconsole.info('applying overrides for seriesItem');\r\n\t\tconsole.debug(seriesItemAlias);\r\n\t\tconsole.debug(this.panel.seriesOverrides);\r\n\t\tfor(var i=0; i<=this.panel.seriesOverrides.length; i++){\r\n\t\t\tconsole.debug('comparing:');\r\n\t\t\tconsole.debug(this.panel.seriesOverrides[i]);\r\n\t\t\tif (this.panel.seriesOverrides[i] && this.panel.seriesOverrides[i].alias == seriesItemAlias){\r\n\t\t\t\toverrides = this.panel.seriesOverrides[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n\t\t\treturn Number(strVale.trim());\r\n\t\t});\r\n\t\tcolorData.colorMap = this.panel.colors;\r\n\t\tseriesItem.colorData = colorData;\r\n\t\t\r\n\t\tseriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\t\t\r\n\t\treturn seriesItem;\r\n\t}\r\n\t\r\n\tinvertColorOrder() {\r\n\t    this.panel.colors.reverse();\r\n\t    this.refresh();\r\n\t}\r\n\t\r\n\taddTreeMapId(){\r\n\t\tthis.panel.treeMap.ids.push('');\r\n\t\tthis.refresh();\r\n\t}\r\n\t\r\n\tremoveTreeMapId(pos){\r\n\t\tthis.panel.treeMap.ids.splice(pos,1);\r\n\t\tthis.refresh();\r\n\t}\r\n\t\r\n\tchangeTreeMapId(idString, pos){\r\n\t\tthis.panel.treeMap.ids[pos] = idString;\r\n\t}\r\n\r\n\tgetDecimalsForValue(value) {\r\n\t    if (_.isNumber(this.panel.decimals)) {\r\n\t      return {decimals: this.panel.decimals, scaledDecimals: null};\r\n\t    }\r\n\r\n\t    var delta = value / 2;\r\n\t    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\t\r\n\t    var magn = Math.pow(10, -dec),\r\n\t      norm = delta / magn, // norm is between 1.0 and 10.0\r\n\t      size;\r\n\t\r\n\t    if (norm < 1.5) {\r\n\t      size = 1;\r\n\t    } else if (norm < 3) {\r\n\t      size = 2;\r\n\t      // special case for 2.5, requires an extra decimal\r\n\t      if (norm > 2.25) {\r\n\t        size = 2.5;\r\n\t        ++dec;\r\n\t      }\r\n\t    } else if (norm < 7.5) {\r\n\t      size = 5;\r\n\t    } else {\r\n\t      size = 10;\r\n\t    }\r\n\t\r\n\t    size *= magn;\r\n\t\r\n\t    // reduce starting decimals if not needed\r\n\t    if (Math.floor(value) === value) { dec = 0; }\r\n\t\r\n\t    var result = {};\r\n\t    result.decimals = Math.max(0, dec);\r\n\t    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\t\r\n\t    return result;\r\n\t}\r\n\t\r\n\tlink(scope, elem, attrs, ctrl) {\r\n\t\tvar chartElement = elem.find('.heatmap');\r\n\t\tchartElement.append('<div id=\"'+ctrl.containerDivId+'\"></div>');\r\n\t    var chartContainer = $(document.getElementById(ctrl.containerDivId));\r\n    \tconsole.debug('found chartContainer');\r\n    \tconsole.debug(chartContainer);\r\n    \telem.css('height', ctrl.height + 'px');\r\n    \t\r\n\r\n    \tfunction render(data){\r\n    \t\tupdateSize();\r\n    \t\tupdateChart(data);\r\n    \t}\r\n    \t\r\n    \tfunction updateSize(){\r\n    \t\telem.css('height', ctrl.height + 'px');\r\n    \t}\r\n    \t\r\n    \tfunction updateChart(data){\r\n    \t\td3.select(\"#\"+ctrl.containerDivId).selectAll('*').remove();\r\n    \t\t\r\n    \t\t/*data = [\r\n    \t\t        {\"value\": 100, \"alias\": \"alpha\", \"group\": \"group 1\"},\r\n    \t\t        {\"value\": 70, \"alias\": \"beta\", \"group\": \"group 2\"},\r\n    \t\t        {\"value\": 40, \"alias\": \"gamma\", \"group\": \"group 2\"},\r\n    \t\t        {\"value\": 15, \"alias\": \"delta\", \"group\": \"group 2\"},\r\n    \t\t        {\"value\": 5, \"alias\": \"epsilon\", \"group\": \"group 1\"},\r\n    \t\t        {\"value\": 1, \"alias\": \"zeta\", \"group\": \"group 1\"}\r\n    \t\t      ];*/\r\n    \t\t\r\n    \t\t\r\n\r\n    \t\t// Make sure the necessary IDs are added\r\n    \t\tvar idKeys = Array.from(ctrl.panel.treeMap.ids);\r\n    \t\tensureArrayContains(idKeys, 'alias');\r\n    \t\tif(ctrl.panel.treeMap.enableTimeBlocks){\r\n    \t\t\tensureArrayContains(idKeys, 'timestamp');\r\n    \t\t}\r\n    \t\t\r\n    \t\t// Setup Aggregations \r\n    \t\tvar aggs = {};\r\n    \t\taggs.value = ctrl.panel.treeMap.aggregationFunction;\r\n    \t\t\r\n    \t\td3plus.viz()\r\n\t\t\t\t.dev(ctrl.panel.treeMap.debug)\r\n    \t\t\t.aggs(aggs)\r\n    \t\t\t.container(\"#\"+ctrl.containerDivId)\r\n    \t\t\t.data(data)\r\n    \t\t\t//.type(\"tree_map\")\r\n    \t\t\t.type({\"mode\": ctrl.panel.treeMap.mode})    // sets the mode of visualization display based on type    \r\n    \t\t\t.id({\r\n    \t\t\t\t\"value\": _.uniq(idKeys),\r\n    \t\t\t\t\"grouping\": ctrl.panel.treeMap.enableGrouping\r\n    \t\t\t})\r\n    \t\t\t.depth(Number(ctrl.panel.treeMap.depth))\r\n    \t\t\t.size(\"value\")\r\n    \t\t\t.height(ctrl.height)\r\n    \t\t\t.width(ctrl.width)\r\n    \t\t\t.color({\r\n    \t\t\t\t\"heatmap\": [ \"grey\" , \"purple\" ],\r\n    \t\t\t    \"value\": \"value\"\r\n    \t\t\t})\r\n    \t\t\t.format({ \"text\" : function( text , key ) {\r\n\t\t\t\t    return text;\r\n\t\t\t\t  }\r\n\t\t\t\t})\r\n    \t\t\t.draw();\r\n    \t}\r\n    \t\r\n    \tthis.events.on('render', function onRender(data) {\r\n    \t\tif(typeof d3plus !== 'undefined' && data){\r\n    \t\t\trender(data);\r\n    \t\t\tctrl.renderingCompleted();\r\n    \t\t} else {\r\n    \t\t\tconsole.info('d3plus is not loaded yet');\r\n    \t\t}\r\n\t    });\r\n\t    \r\n\t}\r\n// End Class\r\n}\r\n\r\nfunction ensureArrayContains(array, value) {\r\n\tif (array.indexOf(value) == -1) {\r\n\t\tarray.push(value);\r\n\t}\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n\tconsole.info('Getting color for value');\r\n\tconsole.debug(data);\r\n\tconsole.debug(value);\r\n\tfor (var i = data.thresholds.length; i > 0; i--) {\r\n\t\tif (value >= data.thresholds[i-1]) {\r\n\t\treturn data.colorMap[i];\r\n\t}\r\n  }\r\n  return _.first(data.colorMap);\r\n}\r\n\r\nHeatmapCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n\tHeatmapCtrl,\r\n\tHeatmapCtrl as MetricsPanelCtrl\r\n};"]}