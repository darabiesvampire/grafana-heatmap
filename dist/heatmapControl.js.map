{"version":3,"sources":["../src/heatmapControl.js"],"names":["ensureArrayContains","array","value","indexOf","push","colorToHex","color","substr","digits","replace","split","length","red","parseInt","green","blue","rgba","toString","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","data","TimeSeries","kbn","MetricsPanelCtrl","heatmapEditor","displayEditor","pluginName","_","panelOptions","valueTypes","treeMap","modes","aggregationFunctions","panelDefaults","seriesOverrides","thresholds","colors","legend","show","min","max","avg","current","total","maxDataPoints","mappingType","nullPointMode","format","valueName","valueMaps","op","text","mode","groups","key","aggregationFunction","enableTimeBlocks","enableGrouping","debug","depth","ids","nodeSizeProperty","HeatmapCtrl","$scope","$injector","$sce","defaults","panel","options","chartId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","initializePanel","d3plusPath","_this","meta","SystemJS","config","import","then","d3plusLoaded","console","log","emit","err","getPanelContainer","html","addEditorTab","$","document","getElementById","dataList","info","series","map","seriesHandler","preparedData","d3plusDataProcessor","render","dataArray","resultArray","dataIndex","newDataItem","Object","assign","stats","groupArray","groupIndex","regex","stringToJsRegex","matches","alias","match","timeBlockArray","dataSeries","dataPointIndex","flotpairs","dataSeriesCopy","datapoints","timestamp","seriesData","target","getFlotPairs","override","group","without","thresholdCount","colorCount","refresh","colorIndex","splice","Math","apply","absoluteDistance","valueDistanceFromMin","seriesItemAlias","seriesItem","colorData","overrides","i","strVale","Number","trim","colorMap","reverse","pos","idString","scope","elem","attrs","ctrl","chartElement","find","append","chartContainer","css","height","gradientValueMax","gradientValueMin","updateSize","updateCanvasStyle","updateChart","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","getVisSize","dataPoint","getVisColor","rgbColor","getGradientForValue","hexColor","d3","select","selectAll","remove","idKeys","Array","from","aggs","count","d3plus","viz","dev","container","showLegend","type","uniq","size","draw","onRender","renderingCompleted","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsYA,UAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AAC1C,MAAID,MAAME,OAAN,CAAcD,KAAd,KAAwB,CAAC,CAA7B,EAAgC;AAC/BD,SAAMG,IAAN,CAAWF,KAAX;AACA;AACD;;AAED,UAASG,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAIA,MAAMC,MAAN,CAAa,CAAb,EAAgB,CAAhB,MAAuB,GAA3B,EAAgC;AAC5B,UAAOD,KAAP;AACH;AACD,MAAIE,SAASF,MAAMG,OAAN,CAAc,eAAd,EAA8B,EAA9B,EAAkCC,KAAlC,CAAwC,GAAxC,CAAb;AACA,SAAMF,OAAOG,MAAP,GAAgB,CAAtB,EAAwB;AACvBH,UAAOJ,IAAP,CAAY,GAAZ;AACA;;AAED,MAAIQ,MAAMC,SAASL,OAAO,CAAP,CAAT,CAAV;AACA,MAAIM,QAAQD,SAASL,OAAO,CAAP,CAAT,CAAZ;AACA,MAAIO,OAAOF,SAASL,OAAO,CAAP,CAAT,CAAX;;AAEA,MAAIQ,OAAOD,OAAQD,SAAS,CAAjB,GAAuBF,OAAO,EAAzC;AACA,SAAO,MAAMI,KAAKC,QAAL,CAAc,EAAd,CAAb;AACH;;AAED,UAASC,qBAAT,CAA+BC,MAA/B,EAAuCC,QAAvC,EAAgD;AAC/C,MAAIC,IAAIF,OAAOG,KAAP,GAAeF,QAAvB;AACA,MAAIG,UAAUJ,OAAOK,UAAP,CAAkB,IAAlB,CAAd;AACG,MAAIC,IAAIF,QAAQG,YAAR,CAAqBL,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCM,IAAzC;AACA,MAAIrB,QAAQ,UAAQ,CAACmB,EAAE,CAAF,IAAM,GAAN,GAAWA,EAAE,CAAF,CAAX,GAAiB,GAAjB,GAAsBA,EAAE,CAAF,CAAtB,GAA4B,GAA5B,GAAiCA,EAAE,CAAF,CAAlC,CAAR,GAAgD,GAA5D;AACA,SAAOnB,KAAP;AACH;;;;AAlaMsB,a;;AACAC,M;;AACCC,mB,kBAAAA,gB;;AACAC,gB,eAAAA,a;AAAeC,gB,eAAAA,a;AAAeC,a,eAAAA,U;;AAC/BC,I;;;;;;;;;;;;;;;;;;;;;AAIDC,e,GAAe;AACpBC,gBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,OAAtB,EAA+B,SAA/B,CADQ;AAEpBC,aAAQ;AACJC,YAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,MAAtB,EAA8B,YAA9B,CADH;AAEJC,2BAAsB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,QAAtB,EAAgC,MAAhC,EAAwC,QAAxC,EAAkD,UAAlD,EAA8D,UAA9D,EAA0E,WAA1E;AAFlB;AAFY,I;AAQfC,gB,GAAgB;AACrB;AACGC,qBAAiB,EAFC;AAGrBC,gBAAY,MAHS;AAIrBC,YAAQ,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAJa;AAKrBC,YAAQ;AACPC,WAAM,IADC;AAEPC,UAAK,IAFE;AAGPC,UAAK,IAHE;AAIPC,UAAK,IAJE;AAKPC,cAAS,IALF;AAMPC,YAAO;AANA,KALa;AAarBC,mBAAe,GAbM;AAcrBC,iBAAa,CAdQ;AAerBC,mBAAe,WAfM;AAgBrBC,YAAQ,MAhBa;AAiBrBC,eAAW,KAjBU;AAkBlBC,eAAW,CACT,EAAEtD,OAAO,MAAT,EAAiBuD,IAAI,GAArB,EAA0BC,MAAM,KAAhC,EADS,CAlBO;AAqBlBrB,aAAS;AACRsB,WAAM,UADE;AAERC,aAAQ,CAAC,EAACC,KAAI,QAAL,EAAe3D,OAAO,UAAtB,EAAD,CAFA;AAGR4D,0BAAqB,KAHb;AAIRC,uBAAkB,KAJV;AAKRC,qBAAgB,IALR;AAMRC,YAAO,KANC;AAORC,YAAO,CAPC;AAQRC,UAAK,CAAC,OAAD,CARG;AASRC,uBAAkB;AATV;AArBS,I;;sDAkChBC,W;;;AACL,yBAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqC;AAAA;;AAAA,4HAC9BF,MAD8B,EACtBC,SADsB;;AAEpCrC,OAAEuC,QAAF,CAAW,OAAKC,KAAhB,EAAuBlC,aAAvB;;AAEA,YAAKmC,OAAL,GAAexC,YAAf;AACA,YAAKuC,KAAL,CAAWE,OAAX,GAAqB,WAAW,OAAKF,KAAL,CAAWG,EAA3C;AACA,YAAKC,cAAL,GAAsB,eAAa,OAAKJ,KAAL,CAAWE,OAA9C;AACA,YAAKJ,IAAL,GAAYA,IAAZ;AACA,YAAKO,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,OAAKC,cAAL,CAAoBC,IAApB,QAAjC;AACA,YAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,OAAKG,cAAL,CAAoBD,IAApB,QAAhC;AACA,YAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,OAAKG,cAAL,CAAoBD,IAApB,QAArC;AACA,YAAKE,eAAL;AAXoC;AAYpC;;;;uCAEgB;AAChB,UAAIC,aAAa,aAAWpD,UAAX,GAAsB,6BAAvC;AACA,UAAIqD,QAAQ,IAAZ;AACA,UAAIC,OAAO,EAAX;AACAA,WAAKF,UAAL,IAAmB;AACZ/B,eAAQ;AADI,OAAnB;;AAIAkC,eAASC,MAAT,CAAgB;AACbF,aAAMA;AADO,OAAhB;;AAIAC,eAASE,MAAT,CAAgBL,UAAhB,EAA4BM,IAA5B,CAAiC,SAASC,YAAT,GAAuB;AACvDC,eAAQC,GAAR,CAAY,kBAAZ;AACAR,aAAMP,MAAN,CAAagB,IAAb,CAAkB,QAAlB;AACA,OAHD;AAIA;;;iCAEWC,G,EAAI;AACf,WAAKC,iBAAL,GAAyBC,IAAzB,CAA8B,uBAAuBF,GAAvB,GAA6B,QAA3D;AACA;;;sCAEgB;AAChB,WAAKG,YAAL,CAAkB,SAAlB,EAA6BpE,aAA7B,EAA4C,CAA5C;AACA,WAAKoE,YAAL,CAAkB,SAAlB,EAA6BnE,aAA7B,EAA4C,CAA5C;AACA;;;yCAEkB;AAClB,aAAOoE,EAAEC,SAASC,cAAT,CAAwB,KAAKxB,cAA7B,CAAF,CAAP;AACA;;;oCAEcyB,Q,EAAS;AACvBV,cAAQW,IAAR,CAAa,eAAb;AACAX,cAAQ5B,KAAR,CAAcsC,QAAd;AACA,WAAKE,MAAL,GAAcF,SAASG,GAAT,CAAa,KAAKC,aAAL,CAAmBzB,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACAW,cAAQW,IAAR,CAAa,2BAAb;;AAEA,UAAII,eAAe,KAAKC,mBAAL,CAAyB,KAAKJ,MAA9B,CAAnB;AACA,WAAKK,MAAL,CAAYF,YAAZ;AACA;;;yCAKmBG,S,EAAU;AAC7B,UAAIC,cAAc,EAAlB;;AAEA,UAAG,KAAKtC,KAAL,CAAWrC,OAAX,CAAmBuB,MAAnB,CAA0BjD,MAA1B,GAAmC,CAAtC,EAAwC;AACvC;AACA,YAAK,IAAIsG,YAAU,CAAnB,EAAsBA,YAAYF,UAAUpG,MAA5C,EAAoDsG,WAApD,EAAgE;AAC/D,YAAIC,cAAcC,OAAOC,MAAP,CAAc,EAAd,EAAkBL,UAAUE,SAAV,CAAlB,EAAwCF,UAAUE,SAAV,EAAqBI,KAA7D,CAAlB;AACAL,oBAAY5G,IAAZ,CAAiB8G,WAAjB;AACA;AACD,OAND,MAMO;AACN;AACA,WAAII,aAAa,EAAjB;AACA,YAAI,IAAIC,aAAW,CAAnB,EAAsBA,aAAW,KAAK7C,KAAL,CAAWrC,OAAX,CAAmBuB,MAAnB,CAA0BjD,MAA3D,EAAmE4G,YAAnE,EAAgF;AAC/ED,mBAAWlH,IAAX,CAAgB;AACfyD,cAAK,KAAKa,KAAL,CAAWrC,OAAX,CAAmBuB,MAAnB,CAA0B2D,UAA1B,EAAsC1D,GAD5B;AAEf2D,gBAAO3F,IAAI4F,eAAJ,CAAoB,KAAK/C,KAAL,CAAWrC,OAAX,CAAmBuB,MAAnB,CAA0B2D,UAA1B,EAAsCrH,KAA1D;AAFQ,SAAhB;AAIA;AACD,YAAK,IAAI+G,YAAU,CAAnB,EAAsBA,YAAYF,UAAUpG,MAA5C,EAAoDsG,WAApD,EAAgE;AAC/D,YAAIC,cAAcC,OAAOC,MAAP,CAAc,EAAd,EAAkBL,UAAUE,SAAV,CAAlB,EAAwCF,UAAUE,SAAV,EAAqBI,KAA7D,CAAlB;;AAEA,aAAI,IAAIE,aAAW,CAAnB,EAAsBA,aAAaD,WAAW3G,MAA9C,EAAsD4G,YAAtD,EAAmE;AAClE,aAAI1D,MAAMyD,WAAWC,UAAX,EAAuB1D,GAAjC;AACA,aAAI2D,QAAQF,WAAWC,UAAX,EAAuBC,KAAnC;AACA,aAAIE,UAAUR,YAAYS,KAAZ,CAAkBC,KAAlB,CAAwBJ,KAAxB,CAAd;AACA,aAAIE,WAAWA,QAAQ/G,MAAR,GAAiB,CAAhC,EAAkC;AACjCuG,sBAAYrD,GAAZ,IAAmB6D,QAAQ,CAAR,CAAnB;AACA,UAFD,MAEO;AACNR,sBAAYrD,GAAZ,IAAmB,IAAnB;AACA;AACD;AACDmD,oBAAY5G,IAAZ,CAAiB8G,WAAjB;AACA;AACD;;AAGD;AACA;AACA,UAAG,KAAKxC,KAAL,CAAWrC,OAAX,CAAmB0B,gBAAtB,EAAuC;AACtC8B,eAAQW,IAAR,CAAa,4BAAb;AACA,WAAIqB,iBAAiB,EAArB;AACA,YAAK,IAAIZ,YAAU,CAAnB,EAAsBA,YAAYD,YAAYrG,MAA9C,EAAsDsG,WAAtD,EAAkE;AACjEpB,gBAAQ5B,KAAR,CAAc,eAAagD,SAAb,GAAuB,UAAvB,GAAkCD,YAAYC,SAAZ,EAAuBU,KAAvE;AACA,YAAIG,aAAad,YAAYC,SAAZ,CAAjB;AACA,aAAI,IAAIc,iBAAe,CAAvB,EAA0BA,iBAAiBD,WAAWE,SAAX,CAAqBrH,MAAhE,EAAwEoH,gBAAxE,EAAyF;AACxF,aAAIE,iBAAiBd,OAAOC,MAAP,CAAc,EAAd,EAAkBU,UAAlB,CAArB;AACA,gBAAOG,eAAeC,UAAtB;AACA,gBAAOD,eAAeD,SAAtB;AACAC,wBAAeE,SAAf,GAA2BL,WAAWE,SAAX,CAAqBD,cAArB,EAAqC,CAArC,CAA3B;AACAE,wBAAe/H,KAAf,GAAuB4H,WAAWE,SAAX,CAAqBD,cAArB,EAAqC,CAArC,CAAvB;AACAF,wBAAezH,IAAf,CAAoB6H,cAApB;AACA;AACD;AACDjB,qBAAca,cAAd;AACA;;AAED,aAAOb,WAAP;AACA;;;mCAKaoB,U,EAAY;AACzB,UAAI3B,SAAS,IAAI7E,UAAJ,CAAe;AAC3BsG,mBAAYE,WAAWF,UADI;AAE3BP,cAAOS,WAAWC,MAAX,CAAkB5H,OAAlB,CAA0B,gBAA1B,EAA4C,GAA5C;AAFoB,OAAf,CAAb;AAIGgG,aAAOuB,SAAP,GAAmBvB,OAAO6B,YAAP,CAAoB,KAAK5D,KAAL,CAAWrB,aAA/B,CAAnB;AACA,aAAOoD,MAAP;AACH;;;uCAEiB8B,Q,EAAU;AAC3B,WAAK7D,KAAL,CAAWjC,eAAX,CAA2BrC,IAA3B,CAAgCmI,YAAY,EAA5C;AACA;;;qCAEeC,K,EAAO;AACtB,WAAK9D,KAAL,CAAWrC,OAAX,CAAmBuB,MAAnB,CAA0BxD,IAA1B,CAA+BoI,SAAS,EAAxC;AACA;;;0CAEoBD,Q,EAAU;AAC9B,WAAK7D,KAAL,CAAWjC,eAAX,GAA6BP,EAAEuG,OAAF,CAAU,KAAK/D,KAAL,CAAWjC,eAArB,EAAsC8F,QAAtC,CAA7B;AACG,WAAKzB,MAAL;AACH;;;wCAEkB0B,K,EAAO;AACzB,WAAK9D,KAAL,CAAWrC,OAAX,CAAmBuB,MAAnB,GAA4B1B,EAAEuG,OAAF,CAAU,KAAK/D,KAAL,CAAWrC,OAAX,CAAmBuB,MAA7B,EAAqC4E,KAArC,CAA5B;AACG,WAAK1B,MAAL;AACH;;;wCAEiB;AACjB,UAAI4B,iBAAiB,KAAKhE,KAAL,CAAWhC,UAAX,CAAsB/B,MAA3C;AACA,UAAIgI,aAAa,KAAKjE,KAAL,CAAW/B,MAAX,CAAkBhC,MAAnC;AACA,WAAKiI,OAAL;AACA;;;iCAEWC,U,EAAYvI,K,EAAM;AAC7B,WAAKoE,KAAL,CAAW/B,MAAX,CAAkBkG,UAAlB,IAAgCvI,KAAhC;AACA;;;iCAEWuI,U,EAAW;AACtB,WAAKnE,KAAL,CAAW/B,MAAX,CAAkBmG,MAAlB,CAAyBD,UAAzB,EAAoC,CAApC;AACA;;;gCAES;AACT,WAAKnE,KAAL,CAAW/B,MAAX,CAAkBvC,IAAlB,CAAuB,wBAAvB;AACA;;;yCAEmBuB,I,EAAMzB,K,EAAM;AAC/B,UAAI4C,MAAMiG,KAAKjG,GAAL,CAASkG,KAAT,CAAeD,IAAf,EAAqBpH,KAAKe,UAA1B,CAAV;AACA,UAAIK,MAAMgG,KAAKhG,GAAL,CAASiG,KAAT,CAAeD,IAAf,EAAqBpH,KAAKe,UAA1B,CAAV;AACA,UAAIuG,mBAAmBlG,MAAMD,GAA7B;AACA,UAAIoG,uBAAuBhJ,QAAQ4C,GAAnC;AACA,UAAI1B,WAAW8H,uBAAqBD,gBAApC;AACA;AACA7H,iBAAW2H,KAAKjG,GAAL,CAAS,IAAT,EAAe1B,QAAf,CAAX;AACA;AACAA,iBAAW2H,KAAKhG,GAAL,CAAS,IAAT,EAAe3B,QAAf,CAAX;;AAEA,aAAOF,sBAAsB,KAAKC,MAA3B,EAAmCC,QAAnC,CAAP;AACA;;;oCAEc+H,e,EAAgB;AAC9B,UAAIC,aAAa,EAAjB;AAAA,UAAqBC,YAAY,EAAjC;AAAA,UAAqCC,YAAY,EAAjD;AACAzD,cAAQW,IAAR,CAAa,mCAAb;AACAX,cAAQ5B,KAAR,CAAckF,eAAd;AACAtD,cAAQ5B,KAAR,CAAc,KAAKS,KAAL,CAAWjC,eAAzB;AACA,WAAI,IAAI8G,IAAE,CAAV,EAAaA,KAAG,KAAK7E,KAAL,CAAWjC,eAAX,CAA2B9B,MAA3C,EAAmD4I,GAAnD,EAAuD;AACtD1D,eAAQ5B,KAAR,CAAc,YAAd;AACA4B,eAAQ5B,KAAR,CAAc,KAAKS,KAAL,CAAWjC,eAAX,CAA2B8G,CAA3B,CAAd;AACA,WAAI,KAAK7E,KAAL,CAAWjC,eAAX,CAA2B8G,CAA3B,KAAiC,KAAK7E,KAAL,CAAWjC,eAAX,CAA2B8G,CAA3B,EAA8B5B,KAA9B,IAAuCwB,eAA5E,EAA4F;AAC3FG,oBAAY,KAAK5E,KAAL,CAAWjC,eAAX,CAA2B8G,CAA3B,CAAZ;AACA;AACD;AACDF,gBAAU3G,UAAV,GAAuB,CAAC4G,UAAU5G,UAAV,IAAwB,KAAKgC,KAAL,CAAWhC,UAApC,EAAgDhC,KAAhD,CAAsD,GAAtD,EAA2DgG,GAA3D,CAA+D,UAAS8C,OAAT,EAAkB;AACvG,cAAOC,OAAOD,QAAQE,IAAR,EAAP,CAAP;AACA,OAFsB,CAAvB;AAGAL,gBAAUM,QAAV,GAAqB,KAAKjF,KAAL,CAAW/B,MAAhC;AACAyG,iBAAWC,SAAX,GAAuBA,SAAvB;;AAEAD,iBAAW7F,SAAX,GAAuB+F,UAAU/F,SAAV,IAAuB,KAAKmB,KAAL,CAAWnB,SAAzD;;AAEA,aAAO6F,UAAP;AACA;;;wCAEkB;AACf,WAAK1E,KAAL,CAAW/B,MAAX,CAAkBiH,OAAlB;AACA,WAAKhB,OAAL;AACH;;;oCAEa;AACb,WAAKlE,KAAL,CAAWrC,OAAX,CAAmB8B,GAAnB,CAAuB/D,IAAvB,CAA4B,EAA5B;AACA,WAAKwI,OAAL;AACA;;;qCAEeiB,G,EAAI;AACnB,WAAKnF,KAAL,CAAWrC,OAAX,CAAmB8B,GAAnB,CAAuB2E,MAAvB,CAA8Be,GAA9B,EAAkC,CAAlC;AACA,WAAKjB,OAAL;AACA;;;qCAEekB,Q,EAAUD,G,EAAI;AAC7B,WAAKnF,KAAL,CAAWrC,OAAX,CAAmB8B,GAAnB,CAAuB0F,GAAvB,IAA8BC,QAA9B;AACA;;;0BAMIC,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC9B,UAAIC,eAAeH,KAAKI,IAAL,CAAU,UAAV,CAAnB;AACAD,mBAAaE,MAAb,CAAoB,cAAYH,KAAKpF,cAAjB,GAAgC,UAApD;AACG,UAAIwF,iBAAiBlE,EAAEC,SAASC,cAAT,CAAwB4D,KAAKpF,cAA7B,CAAF,CAArB;AACAe,cAAQ5B,KAAR,CAAc,sBAAd;AACA4B,cAAQ5B,KAAR,CAAcqG,cAAd;AACAN,WAAKO,GAAL,CAAS,QAAT,EAAmBL,KAAKM,MAAL,GAAc,IAAjC;;AAEA,UAAIrJ,SAAS6I,KAAKI,IAAL,CAAU,SAAV,EAAqB,CAArB,CAAb;AACAF,WAAK/I,MAAL,GAAcA,MAAd;AACA,UAAIsJ,mBAAmBT,KAAKI,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;AACA,UAAIM,mBAAmBV,KAAKI,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;;AAGA,eAAStD,MAAT,CAAgBnF,IAAhB,EAAqB;AACpBgJ;AACAC;AACAC,mBAAYlJ,IAAZ;AACA;;AAED,eAASiJ,iBAAT,GAA4B;AAC3BzJ,cAAOG,KAAP,GAAeyH,KAAKhG,GAAL,CAASoH,aAAa,CAAb,EAAgBW,WAAzB,EAAsC,GAAtC,CAAf;AACH,WAAIC,gBAAgB5J,OAAOK,UAAP,CAAkB,IAAlB,CAApB;AACAuJ,qBAAcC,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B7J,OAAOG,KAArC,EAA4CH,OAAOqJ,MAAnD;;AAEA,WAAIS,MAAMF,cAAcG,oBAAd,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC/J,OAAOG,KAAhD,EAAuD,CAAvD,CAAV;AACA,WAAI6J,aAAa,IAAIpC,KAAKhG,GAAL,CAASmH,KAAKxF,KAAL,CAAW/B,MAAX,CAAkBhC,MAA3B,EAAmC,CAAnC,CAArB;AACA,YAAI,IAAI4I,IAAE,CAAV,EAAaA,IAAEW,KAAKxF,KAAL,CAAW/B,MAAX,CAAkBhC,MAAjC,EAAyC4I,GAAzC,EAA6C;AAC5C,YAAI6B,eAAelB,KAAKxF,KAAL,CAAW/B,MAAX,CAAkB4G,CAAlB,CAAnB;AACA0B,YAAII,YAAJ,CAAiBtC,KAAKjG,GAAL,CAASqI,aAAW5B,CAApB,EAAsB,CAAtB,CAAjB,EAA2C6B,YAA3C;AACA;AACDL,qBAAcO,SAAd,GAA0BL,GAA1B;AACAF,qBAAcQ,QAAd,CAAuB,CAAvB,EAA0B,CAA1B,EAA6BpK,OAAOG,KAApC,EAA2C,CAA3C;AACG4I,YAAKa,aAAL,GAAqBA,aAArB;;AAEHN,wBAAiBe,SAAjB,GAA6BzC,KAAKhG,GAAL,CAASiG,KAAT,CAAeD,IAAf,EAAqBmB,KAAKxF,KAAL,CAAWhC,UAAX,CAAsBhC,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACAgK,wBAAiBc,SAAjB,GAA6BzC,KAAKjG,GAAL,CAASkG,KAAT,CAAeD,IAAf,EAAqBmB,KAAKxF,KAAL,CAAWhC,UAAX,CAAsBhC,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACG;;AAED,eAASiK,UAAT,GAAqB;AACpBX,YAAKO,GAAL,CAAS,QAAT,EAAmBL,KAAKM,MAAL,GAAc,IAAjC;AACA;;AAED,eAASiB,UAAT,CAAoBC,SAApB,EAA8B;AAC7B,cAAOA,UAAUxB,KAAKxF,KAAL,CAAWnB,SAArB,CAAP;AACA;;AAED,eAASoI,WAAT,CAAqBD,SAArB,EAA+B;AAC9B,WAAIE,WAAW1B,KAAK2B,mBAAL,CAAyB,EAACnJ,YAAYwH,KAAKxF,KAAL,CAAWhC,UAAX,CAAsBhC,KAAtB,CAA4B,GAA5B,CAAb,EAAzB,EAAyEgL,UAAUxB,KAAKxF,KAAL,CAAWnB,SAArB,CAAzE,CAAf;AACH,WAAIuI,WAAWzL,WAAWuL,QAAX,CAAf;AACA,cAAOE,QAAP;AACG;;AAED,eAASjB,WAAT,CAAqBlJ,IAArB,EAA0B;AACzBoK,UAAGC,MAAH,CAAU,MAAI9B,KAAKpF,cAAnB,EAAmCmH,SAAnC,CAA6C,GAA7C,EAAkDC,MAAlD;;AAEA;AACA,WAAIC,SAASC,MAAMC,IAAN,CAAWnC,KAAKxF,KAAL,CAAWrC,OAAX,CAAmB8B,GAA9B,CAAb;AACA,WAAGgI,OAAOxL,MAAP,IAAiB,CAApB,EAAsB;AACrBX,4BAAoBmM,MAApB,EAA4B,OAA5B;AACA;AACD,WAAGjC,KAAKxF,KAAL,CAAWrC,OAAX,CAAmB0B,gBAAtB,EAAuC;AACtC/D,4BAAoBmM,MAApB,EAA4B,WAA5B;AACA;;AAED;AACA,WAAIG,OAAO,EAAX;AACAA,YAAKpM,KAAL,GAAagK,KAAKxF,KAAL,CAAWrC,OAAX,CAAmByB,mBAAhC;AACAwI,YAAKrJ,OAAL,GAAeiH,KAAKxF,KAAL,CAAWrC,OAAX,CAAmByB,mBAAlC;AACAwI,YAAKC,KAAL,GAAa,KAAb;AACAD,YAAKpJ,KAAL,GAAa,KAAb;AACAoJ,YAAKtJ,GAAL,GAAW,MAAX;AACAsJ,YAAKxJ,GAAL,GAAW,KAAX;AACAwJ,YAAKvJ,GAAL,GAAW,KAAX;;AAEAyJ,cAAOC,GAAP,GACDC,GADC,CACGxC,KAAKxF,KAAL,CAAWrC,OAAX,CAAmB4B,KADtB,EAEEqI,IAFF,CAEOA,IAFP,EAGEK,SAHF,CAGY,MAAIzC,KAAKpF,cAHrB,EAIElC,MAJF,CAISsH,KAAKxF,KAAL,CAAWrC,OAAX,CAAmBuK,UAJ5B,EAKEjL,IALF,CAKOA,IALP;AAMC;AAND,QAOEkL,IAPF,CAOO,EAAC,QAAQ3C,KAAKxF,KAAL,CAAWrC,OAAX,CAAmBsB,IAA5B,EAPP,EAO6C;AAP7C,QAQEkB,EARF,CAQK;AACH,iBAAS3C,EAAE4K,IAAF,CAAOX,MAAP,CADN;AAEH,oBAAYjC,KAAKxF,KAAL,CAAWrC,OAAX,CAAmB2B;AAF5B,QARL,EAYEE,KAZF,CAYQuF,OAAOS,KAAKxF,KAAL,CAAWrC,OAAX,CAAmB6B,KAA1B,CAZR,EAaE6I,IAbF,CAaOtB,UAbP,EAcEjB,MAdF,CAcSN,KAAKM,MAdd,EAeElJ,KAfF,CAeQ4I,KAAK5I,KAfb,EAgBEhB,KAhBF,CAgBQqL,WAhBR;AAiBC;;;;AAjBD,QAqBEqB,IArBF;AAsBA;;AAGD,WAAKjI,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,SAASiI,QAAT,CAAkBtL,IAAlB,EAAwB;AAChD,WAAG,OAAO6K,MAAP,KAAkB,WAAlB,IAAiC7K,IAApC,EAAyC;AACxCmF,eAAOnF,IAAP;AACAuI,aAAKgD,kBAAL;AACA,QAHD,MAGO;AACNrH,gBAAQW,IAAR,CAAa,0BAAb;AACA;AACD,OAPD;AASH;;;;KA/UwB1E,gB;;AAwWzB,IAUDuC,YAAY8I,WAAZ,GAA0B,aAA1B;;0BAGC9I,W;;+BACAA,W","file":"heatmapControl.js","sourcesContent":["import './libs/d3/d3'; \r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport {heatmapEditor, displayEditor, pluginName} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_heatmap_ctrl';\r\nimport './css/heatmap.css!';\r\n\r\nconst panelOptions = {\r\n\tvalueTypes: ['avg', 'min', 'max', 'total', 'current'],\r\n\ttreeMap:{\r\n    \tmodes: ['squarify', 'slice', 'dice', 'slice-dice'],\r\n    \taggregationFunctions: ['sum', 'min', 'max', 'extent', 'mean', 'median', 'quantile', 'variance', 'deviation']\r\n\t}\r\n};\r\n\r\nconst panelDefaults = {\r\n\t// other style overrides\r\n    seriesOverrides: [],\r\n\tthresholds: '0,10',\r\n\tcolors: ['rgba(50, 172, 45, 1)', 'rgba(241, 255, 0, 1)', 'rgba(245, 54, 54, 1)'],\r\n\tlegend: {\r\n\t\tshow: true,\r\n\t\tmin: true,\r\n\t\tmax: true,\r\n\t\tavg: true,\r\n\t\tcurrent: true,\r\n\t\ttotal: true\r\n\t},\r\n\tmaxDataPoints: 100,\r\n\tmappingType: 1,\r\n\tnullPointMode: 'connected',\r\n\tformat: 'none',\r\n\tvalueName: 'avg',\r\n    valueMaps: [\r\n      { value: 'null', op: '=', text: 'N/A' }\r\n    ],\r\n    treeMap: {\r\n    \tmode: 'squarify',\r\n    \tgroups: [{key:'server', value: '/^.*\\./g'}],\r\n    \taggregationFunction: 'max',\r\n    \tenableTimeBlocks: false,\r\n    \tenableGrouping: true,\r\n    \tdebug: false,\r\n    \tdepth: 0,\r\n    \tids: ['alias'],\r\n    \tnodeSizeProperty: \"value\"\r\n    }\r\n};\r\n\r\nclass HeatmapCtrl extends MetricsPanelCtrl {\r\n\tconstructor($scope, $injector, $sce) {\r\n\t\tsuper($scope, $injector);\r\n\t\t_.defaults(this.panel, panelDefaults);\r\n\t\t\r\n\t\tthis.options = panelOptions;\r\n\t\tthis.panel.chartId = 'chart_' + this.panel.id;\r\n\t\tthis.containerDivId = 'container_'+this.panel.chartId;\r\n\t\tthis.$sce = $sce;\r\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\r\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n\t\tthis.initializePanel();\r\n\t}\r\n\t\r\n\tinitializePanel(){\r\n\t\tvar d3plusPath = 'plugins/'+pluginName+'/libs/d3plus/d3plus.full.js';\r\n\t\tvar _this = this;\r\n\t\tvar meta = {};\r\n\t\tmeta[d3plusPath] = {\r\n\t\t\t      format: 'global'\r\n\t    };\r\n\t\t\r\n\t\tSystemJS.config({\r\n\t\t\t  meta: meta\r\n\t\t\t});\r\n\r\n\t\tSystemJS.import(d3plusPath).then(function d3plusLoaded(){\r\n\t\t\tconsole.log('d3plus is loaded');\r\n\t\t\t_this.events.emit('render');\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleError(err){\r\n\t\tthis.getPanelContainer().html('<p>Error:</p><pre>' + err + '</pre>');\r\n\t}\r\n\t\r\n\tonInitEditMode() {\r\n\t\tthis.addEditorTab('Heatmap', heatmapEditor, 2);\r\n\t\tthis.addEditorTab('Display', displayEditor, 3);\r\n\t}\r\n\t\r\n\tgetPanelContainer(){\r\n\t\treturn $(document.getElementById(this.containerDivId));\r\n\t}\r\n\t\r\n\tonDataReceived(dataList){\r\n\t\tconsole.info('received data');\r\n\t\tconsole.debug(dataList);\r\n\t\tthis.series = dataList.map(this.seriesHandler.bind(this));\r\n\t\tconsole.info('mapped dataList to series');\r\n\r\n\t\tvar preparedData = this.d3plusDataProcessor(this.series);\r\n\t\tthis.render(preparedData);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Prepare data for d3plus\r\n\t */\r\n\td3plusDataProcessor(dataArray){\r\n\t\tvar resultArray = [];\r\n\t\t\r\n\t\tif(this.panel.treeMap.groups.length < 1){\r\n\t\t\t// just add the original items since there are no groups\r\n\t\t\tfor (var dataIndex=0; dataIndex < dataArray.length; dataIndex++){\r\n\t\t\t\tvar newDataItem = Object.assign({}, dataArray[dataIndex], dataArray[dataIndex].stats);\r\n\t\t\t\tresultArray.push(newDataItem);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Process Groups\r\n\t\t\tvar groupArray = [];\r\n\t\t\tfor(var groupIndex=0; groupIndex<this.panel.treeMap.groups.length; groupIndex++){\r\n\t\t\t\tgroupArray.push({\r\n\t\t\t\t\tkey: this.panel.treeMap.groups[groupIndex].key,\r\n\t\t\t\t\tregex: kbn.stringToJsRegex(this.panel.treeMap.groups[groupIndex].value)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tfor (var dataIndex=0; dataIndex < dataArray.length; dataIndex++){\r\n\t\t\t\tvar newDataItem = Object.assign({}, dataArray[dataIndex], dataArray[dataIndex].stats);\r\n\t\t\t\t\r\n\t\t\t\tfor(var groupIndex=0; groupIndex < groupArray.length; groupIndex++){\r\n\t\t\t\t\tvar key = groupArray[groupIndex].key;\r\n\t\t\t\t\tvar regex = groupArray[groupIndex].regex;\r\n\t\t\t\t\tvar matches = newDataItem.alias.match(regex);\r\n\t\t\t\t\tif (matches && matches.length > 0){\r\n\t\t\t\t\t\tnewDataItem[key] = matches[0];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewDataItem[key] = 'NA';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresultArray.push(newDataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\r\n\t\t// If we're using timeBlocks mode\r\n\t\t// replace the aggregated series with individual records\r\n\t\tif(this.panel.treeMap.enableTimeBlocks){\r\n\t\t\tconsole.info('creating timeblock records')\r\n\t\t\tvar timeBlockArray = [];\r\n\t\t\tfor (var dataIndex=0; dataIndex < resultArray.length; dataIndex++){\r\n\t\t\t\tconsole.debug('dataIndex:'+dataIndex+', alias:'+resultArray[dataIndex].alias);\r\n\t\t\t\tvar dataSeries = resultArray[dataIndex];\r\n\t\t\t\tfor(var dataPointIndex=0; dataPointIndex < dataSeries.flotpairs.length; dataPointIndex++){\r\n\t\t\t\t\tvar dataSeriesCopy = Object.assign({}, dataSeries);\r\n\t\t\t\t\tdelete dataSeriesCopy.datapoints;\r\n\t\t\t\t\tdelete dataSeriesCopy.flotpairs;\r\n\t\t\t\t\tdataSeriesCopy.timestamp = dataSeries.flotpairs[dataPointIndex][0];\r\n\t\t\t\t\tdataSeriesCopy.value = dataSeries.flotpairs[dataPointIndex][1];\r\n\t\t\t\t\ttimeBlockArray.push(dataSeriesCopy);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresultArray = timeBlockArray;\r\n\t\t} \r\n\t\t\r\n\t\treturn resultArray;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Series Handler\r\n\t */\r\n\tseriesHandler(seriesData) {\r\n\t\tvar series = new TimeSeries({\r\n\t\t\tdatapoints: seriesData.datapoints,\r\n\t\t\talias: seriesData.target.replace(/\"|,|;|=|:|{|}/g, '_')\r\n\t\t});\r\n\t    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\t    return series;\r\n\t} // End seriesHandler()\r\n\t\r\n\taddSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides.push(override || {});\r\n\t}\r\n\t\r\n\taddTreeMapGroup(group) {\r\n\t\tthis.panel.treeMap.groups.push(group || {});\r\n\t}\r\n\r\n\tremoveSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n\t    this.render();\r\n\t}\r\n\t\r\n\tremoveTreeMapGroup(group) {\r\n\t\tthis.panel.treeMap.groups = _.without(this.panel.treeMap.groups, group);\r\n\t    this.render();\r\n\t}\r\n\t\r\n\tupdateThresholds(){\r\n\t\tvar thresholdCount = this.panel.thresholds.length;\r\n\t\tvar colorCount = this.panel.colors.length;\r\n\t\tthis.refresh();\r\n\t}\r\n\t\r\n\tchangeColor(colorIndex, color){\r\n\t\tthis.panel.colors[colorIndex] = color;\r\n\t}\r\n\t\r\n\tremoveColor(colorIndex){\r\n\t\tthis.panel.colors.splice(colorIndex,1);\r\n\t}\r\n\t\r\n\taddColor(){\r\n\t\tthis.panel.colors.push('rgba(255, 255, 255, 1)');\r\n\t}\r\n\t\r\n\tgetGradientForValue(data, value){\r\n\t\tvar min = Math.min.apply(Math, data.thresholds);\r\n\t\tvar max = Math.max.apply(Math, data.thresholds);\r\n\t\tvar absoluteDistance = max - min;\r\n\t\tvar valueDistanceFromMin = value - min;\r\n\t\tvar xPercent = valueDistanceFromMin/absoluteDistance;\r\n\t\t// Get the smaller number to clamp at 0.99 max\r\n\t\txPercent = Math.min(0.99, xPercent);\r\n\t\t// Get the larger number to clamp at 0.01 min\r\n\t\txPercent = Math.max(0.01, xPercent);\r\n\t\t\r\n\t\treturn getColorByXPercentage(this.canvas, xPercent);\r\n\t}\r\n\t\r\n\tapplyOverrides(seriesItemAlias){\r\n\t\tvar seriesItem = {}, colorData = {}, overrides = {};\r\n\t\tconsole.info('applying overrides for seriesItem');\r\n\t\tconsole.debug(seriesItemAlias);\r\n\t\tconsole.debug(this.panel.seriesOverrides);\r\n\t\tfor(var i=0; i<=this.panel.seriesOverrides.length; i++){\r\n\t\t\tconsole.debug('comparing:');\r\n\t\t\tconsole.debug(this.panel.seriesOverrides[i]);\r\n\t\t\tif (this.panel.seriesOverrides[i] && this.panel.seriesOverrides[i].alias == seriesItemAlias){\r\n\t\t\t\toverrides = this.panel.seriesOverrides[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n\t\t\treturn Number(strVale.trim());\r\n\t\t});\r\n\t\tcolorData.colorMap = this.panel.colors;\r\n\t\tseriesItem.colorData = colorData;\r\n\t\t\r\n\t\tseriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\t\t\r\n\t\treturn seriesItem;\r\n\t}\r\n\t\r\n\tinvertColorOrder() {\r\n\t    this.panel.colors.reverse();\r\n\t    this.refresh();\r\n\t}\r\n\t\r\n\taddTreeMapId(){\r\n\t\tthis.panel.treeMap.ids.push('');\r\n\t\tthis.refresh();\r\n\t}\r\n\t\r\n\tremoveTreeMapId(pos){\r\n\t\tthis.panel.treeMap.ids.splice(pos,1);\r\n\t\tthis.refresh();\r\n\t}\r\n\t\r\n\tchangeTreeMapId(idString, pos){\r\n\t\tthis.panel.treeMap.ids[pos] = idString;\r\n\t}\r\n\t\r\n\t// #############################################\r\n\t// link \r\n\t// #############################################\r\n\r\n\tlink(scope, elem, attrs, ctrl) {\r\n\t\tvar chartElement = elem.find('.heatmap');\r\n\t\tchartElement.append('<div id=\"'+ctrl.containerDivId+'\"></div>');\r\n\t    var chartContainer = $(document.getElementById(ctrl.containerDivId));\r\n    \tconsole.debug('found chartContainer');\r\n    \tconsole.debug(chartContainer);\r\n    \telem.css('height', ctrl.height + 'px');\r\n    \t\r\n    \tvar canvas = elem.find('.canvas')[0];\r\n\t    ctrl.canvas = canvas;\r\n\t    var gradientValueMax = elem.find('.gradient-value-max')[0];\r\n\t    var gradientValueMin = elem.find('.gradient-value-min')[0];\r\n    \t\r\n\r\n    \tfunction render(data){\r\n    \t\tupdateSize();\r\n    \t\tupdateCanvasStyle();\r\n    \t\tupdateChart(data);\r\n    \t}\r\n    \t\r\n    \tfunction updateCanvasStyle(){\r\n\t    \tcanvas.width = Math.max(chartElement[0].clientWidth, 100);\r\n\t\t\tvar canvasContext = canvas.getContext(\"2d\");\r\n\t\t\tcanvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\t\t\r\n\t\t\tvar grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\r\n\t\t\tvar colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\r\n\t\t\tfor(var i=0; i<ctrl.panel.colors.length; i++){\r\n\t\t\t\tvar currentColor = ctrl.panel.colors[i];\r\n\t\t\t\tgrd.addColorStop(Math.min(colorWidth*i,1), currentColor);\r\n\t\t\t}\r\n\t\t\tcanvasContext.fillStyle = grd;\r\n\t\t\tcanvasContext.fillRect(0, 0, canvas.width, 3);\r\n    \t\tctrl.canvasContext = canvasContext;\r\n    \t\t\r\n\t\t\tgradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\r\n\t\t\tgradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\r\n    \t}\r\n    \t\r\n    \tfunction updateSize(){\r\n    \t\telem.css('height', ctrl.height + 'px');\r\n    \t}\r\n    \t\r\n    \tfunction getVisSize(dataPoint){\r\n    \t\treturn dataPoint[ctrl.panel.valueName];\r\n    \t}\r\n    \t\r\n    \tfunction getVisColor(dataPoint){\r\n    \t\tvar rgbColor = ctrl.getGradientForValue({thresholds: ctrl.panel.thresholds.split(',')}, dataPoint[ctrl.panel.valueName]);\r\n\t\t\tvar hexColor = colorToHex(rgbColor);\r\n\t\t\treturn hexColor;\r\n    \t}\r\n    \t\r\n    \tfunction updateChart(data){\r\n    \t\td3.select(\"#\"+ctrl.containerDivId).selectAll('*').remove();\r\n    \t\t\r\n    \t\t// Make sure the necessary IDs are added\r\n    \t\tvar idKeys = Array.from(ctrl.panel.treeMap.ids);\r\n    \t\tif(idKeys.length == 0){\r\n    \t\t\tensureArrayContains(idKeys, 'alias');\r\n    \t\t}\r\n    \t\tif(ctrl.panel.treeMap.enableTimeBlocks){\r\n    \t\t\tensureArrayContains(idKeys, 'timestamp');\r\n    \t\t}\r\n    \t\t\r\n    \t\t// Setup Aggregations \r\n    \t\tvar aggs = {};\r\n    \t\taggs.value = ctrl.panel.treeMap.aggregationFunction;\r\n    \t\taggs.current = ctrl.panel.treeMap.aggregationFunction;\r\n    \t\taggs.count = 'sum';\r\n    \t\taggs.total = 'sum';\r\n    \t\taggs.avg = 'mean';\r\n    \t\taggs.min = 'min';\r\n    \t\taggs.max = 'max';\r\n    \t\t\r\n    \t\td3plus.viz()\r\n\t\t\t\t.dev(ctrl.panel.treeMap.debug)\r\n    \t\t\t.aggs(aggs)\r\n    \t\t\t.container(\"#\"+ctrl.containerDivId)\r\n    \t\t\t.legend(ctrl.panel.treeMap.showLegend)\r\n    \t\t\t.data(data)\r\n    \t\t\t//.type(\"tree_map\")\r\n    \t\t\t.type({\"mode\": ctrl.panel.treeMap.mode})    // sets the mode of visualization display based on type    \r\n    \t\t\t.id({\r\n    \t\t\t\t\"value\": _.uniq(idKeys),\r\n    \t\t\t\t\"grouping\": ctrl.panel.treeMap.enableGrouping\r\n    \t\t\t})\r\n    \t\t\t.depth(Number(ctrl.panel.treeMap.depth))\r\n    \t\t\t.size(getVisSize)\r\n    \t\t\t.height(ctrl.height)\r\n    \t\t\t.width(ctrl.width)\r\n    \t\t\t.color(getVisColor)\r\n    \t\t\t/*.format({ \"text\" : function( text , key ) {\r\n\t\t\t\t    return text;\r\n\t\t\t\t  }\r\n\t\t\t\t})*/\r\n    \t\t\t.draw();\r\n    \t}\r\n    \t\r\n    \t\r\n    \tthis.events.on('render', function onRender(data) {\r\n    \t\tif(typeof d3plus !== 'undefined' && data){\r\n    \t\t\trender(data);\r\n    \t\t\tctrl.renderingCompleted();\r\n    \t\t} else {\r\n    \t\t\tconsole.info('d3plus is not loaded yet');\r\n    \t\t}\r\n\t    });\r\n\t    \r\n\t}\r\n// End Class\r\n}\r\n\r\nfunction ensureArrayContains(array, value) {\r\n\tif (array.indexOf(value) == -1) {\r\n\t\tarray.push(value);\r\n\t}\r\n}\r\n\r\nfunction colorToHex(color) {\r\n    if (color.substr(0, 1) === '#') {\r\n        return color;\r\n    }\r\n    var digits = color.replace(/[rgba\\(\\)\\ ]/g,'').split(',');\r\n    while(digits.length < 3){\r\n    \tdigits.push(255);\r\n    }\r\n    \r\n    var red = parseInt(digits[0]);\r\n    var green = parseInt(digits[1]);\r\n    var blue = parseInt(digits[2]);\r\n    \r\n    var rgba = blue | (green << 8) | (red << 16);\r\n    return '#' + rgba.toString(16);\r\n};\r\n\r\nfunction getColorByXPercentage(canvas, xPercent){\r\n\tvar x = canvas.width * xPercent;\r\n\tvar context = canvas.getContext(\"2d\");\r\n    var p = context.getImageData(x, 1, 1, 1).data; \r\n    var color = 'rgba('+[p[0] +','+ p[1] +','+ p[2] +','+ p[3]]+')';\r\n    return color;\r\n}\r\n\r\nHeatmapCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n\tHeatmapCtrl,\r\n\tHeatmapCtrl as MetricsPanelCtrl\r\n};"]}